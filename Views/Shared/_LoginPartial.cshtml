@using Microsoft.AspNetCore.Identity
@inject SignInManager<BlogUser> SignInManager
@inject UserManager<BlogUser> UserManager


@{
    var user = await UserManager.GetUserAsync(User);
}
<ul class="navbar-nav" style="justify-content:">
    @if (SignInManager.IsSignedIn(User))

    {

        //This line of code uses the built in UserManager to find a specific record in the ASPNetUser table
        //by finding the username
        //var person = await UserManager.FindByNameAsync(User.Identity.Name);


            <li class="nav-item text-center">
                <form class="nav-link" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="btn-sm btn-outline-success">Logout</button>
                </form>
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @user.FullName!</a>
            </li>

    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
